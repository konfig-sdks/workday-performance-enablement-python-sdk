# coding: utf-8

"""
    performanceEnablement

    The Performance Management service enables applications to access and create feedback about workers in the system.

    The version of the OpenAPI document: v5
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from workday_performance_enablement_python_sdk import schemas  # noqa: F401


class GoalsSummary2c793e888bcd100033e663075a2b0000(
    schemas.ComposedSchema,
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        
        class all_of_0(
            schemas.DictSchema
        ):
        
        
            class MetaOapg:
                
                class properties:
                    description = schemas.StrSchema
                    name = schemas.StrSchema
                    
                    
                    class relatesTo(
                        schemas.ListSchema
                    ):
                    
                    
                        class MetaOapg:
                            
                            @staticmethod
                            def items() -> typing.Type['RelatesToSummary2c793e888bcd100034b42ada01b20000']:
                                return RelatesToSummary2c793e888bcd100034b42ada01b20000
                    
                        def __new__(
                            cls,
                            arg: typing.Union[typing.Tuple['RelatesToSummary2c793e888bcd100034b42ada01b20000'], typing.List['RelatesToSummary2c793e888bcd100034b42ada01b20000']],
                            _configuration: typing.Optional[schemas.Configuration] = None,
                        ) -> 'relatesTo':
                            return super().__new__(
                                cls,
                                arg,
                                _configuration=_configuration,
                            )
                    
                        def __getitem__(self, i: int) -> 'RelatesToSummary2c793e888bcd100034b42ada01b20000':
                            return super().__getitem__(i)
                    
                    
                    class activityStreamableItem(
                        schemas.ListSchema
                    ):
                    
                    
                        class MetaOapg:
                            
                            @staticmethod
                            def items() -> typing.Type['ActivityStreamableItemSummary88d272af423b100036fc19a90e210000']:
                                return ActivityStreamableItemSummary88d272af423b100036fc19a90e210000
                    
                        def __new__(
                            cls,
                            arg: typing.Union[typing.Tuple['ActivityStreamableItemSummary88d272af423b100036fc19a90e210000'], typing.List['ActivityStreamableItemSummary88d272af423b100036fc19a90e210000']],
                            _configuration: typing.Optional[schemas.Configuration] = None,
                        ) -> 'activityStreamableItem':
                            return super().__new__(
                                cls,
                                arg,
                                _configuration=_configuration,
                            )
                    
                        def __getitem__(self, i: int) -> 'ActivityStreamableItemSummary88d272af423b100036fc19a90e210000':
                            return super().__getitem__(i)
                    dueDate = schemas.DateSchema
                    
                    
                    class associatedReviews(
                        schemas.ListSchema
                    ):
                    
                    
                        class MetaOapg:
                            
                            @staticmethod
                            def items() -> typing.Type['AssociatedReviewsSummary2c793e888bcd1000346e381955dd0000']:
                                return AssociatedReviewsSummary2c793e888bcd1000346e381955dd0000
                    
                        def __new__(
                            cls,
                            arg: typing.Union[typing.Tuple['AssociatedReviewsSummary2c793e888bcd1000346e381955dd0000'], typing.List['AssociatedReviewsSummary2c793e888bcd1000346e381955dd0000']],
                            _configuration: typing.Optional[schemas.Configuration] = None,
                        ) -> 'associatedReviews':
                            return super().__new__(
                                cls,
                                arg,
                                _configuration=_configuration,
                            )
                    
                        def __getitem__(self, i: int) -> 'AssociatedReviewsSummary2c793e888bcd1000346e381955dd0000':
                            return super().__getitem__(i)
                    
                    
                    class category(
                        schemas.ListSchema
                    ):
                    
                    
                        class MetaOapg:
                            
                            @staticmethod
                            def items() -> typing.Type['CategorySummary88d272af423b100036e57ea69d570000']:
                                return CategorySummary88d272af423b100036e57ea69d570000
                    
                        def __new__(
                            cls,
                            arg: typing.Union[typing.Tuple['CategorySummary88d272af423b100036e57ea69d570000'], typing.List['CategorySummary88d272af423b100036e57ea69d570000']],
                            _configuration: typing.Optional[schemas.Configuration] = None,
                        ) -> 'category':
                            return super().__new__(
                                cls,
                                arg,
                                _configuration=_configuration,
                            )
                    
                        def __getitem__(self, i: int) -> 'CategorySummary88d272af423b100036e57ea69d570000':
                            return super().__getitem__(i)
                
                    @staticmethod
                    def supports() -> typing.Type['Supports9df8579a128710001ac8e9879d1f0000']:
                        return Supports9df8579a128710001ac8e9879d1f0000
                
                    @staticmethod
                    def worker() -> typing.Type['Worker47e98fa91eee100017c2c78c80410000']:
                        return Worker47e98fa91eee100017c2c78c80410000
                
                    @staticmethod
                    def status() -> typing.Type['Status9df8579a128710001ac8e9879d1f0001']:
                        return Status9df8579a128710001ac8e9879d1f0001
                    completedOn = schemas.DateSchema
                
                    @staticmethod
                    def createdBy() -> typing.Type['CreatedBy88d272af423b100036b561a7784b0000']:
                        return CreatedBy88d272af423b100036b561a7784b0000
                    state = schemas.StrSchema
                    id = schemas.StrSchema
                    __annotations__ = {
                        "description": description,
                        "name": name,
                        "relatesTo": relatesTo,
                        "activityStreamableItem": activityStreamableItem,
                        "dueDate": dueDate,
                        "associatedReviews": associatedReviews,
                        "category": category,
                        "supports": supports,
                        "worker": worker,
                        "status": status,
                        "completedOn": completedOn,
                        "createdBy": createdBy,
                        "state": state,
                        "id": id,
                    }
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["relatesTo"]) -> MetaOapg.properties.relatesTo: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["activityStreamableItem"]) -> MetaOapg.properties.activityStreamableItem: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["dueDate"]) -> MetaOapg.properties.dueDate: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["associatedReviews"]) -> MetaOapg.properties.associatedReviews: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["category"]) -> MetaOapg.properties.category: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["supports"]) -> 'Supports9df8579a128710001ac8e9879d1f0000': ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["worker"]) -> 'Worker47e98fa91eee100017c2c78c80410000': ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["status"]) -> 'Status9df8579a128710001ac8e9879d1f0001': ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["completedOn"]) -> MetaOapg.properties.completedOn: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["createdBy"]) -> 'CreatedBy88d272af423b100036b561a7784b0000': ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["state"]) -> MetaOapg.properties.state: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
            
            @typing.overload
            def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
            
            def __getitem__(self, name: typing.Union[typing_extensions.Literal["description", "name", "relatesTo", "activityStreamableItem", "dueDate", "associatedReviews", "category", "supports", "worker", "status", "completedOn", "createdBy", "state", "id", ], str]):
                # dict_instance[name] accessor
                return super().__getitem__(name)
            
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> typing.Union[MetaOapg.properties.description, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["relatesTo"]) -> typing.Union[MetaOapg.properties.relatesTo, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["activityStreamableItem"]) -> typing.Union[MetaOapg.properties.activityStreamableItem, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["dueDate"]) -> typing.Union[MetaOapg.properties.dueDate, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["associatedReviews"]) -> typing.Union[MetaOapg.properties.associatedReviews, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["category"]) -> typing.Union[MetaOapg.properties.category, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["supports"]) -> typing.Union['Supports9df8579a128710001ac8e9879d1f0000', schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["worker"]) -> typing.Union['Worker47e98fa91eee100017c2c78c80410000', schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union['Status9df8579a128710001ac8e9879d1f0001', schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["completedOn"]) -> typing.Union[MetaOapg.properties.completedOn, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["createdBy"]) -> typing.Union['CreatedBy88d272af423b100036b561a7784b0000', schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["state"]) -> typing.Union[MetaOapg.properties.state, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
            
            def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["description", "name", "relatesTo", "activityStreamableItem", "dueDate", "associatedReviews", "category", "supports", "worker", "status", "completedOn", "createdBy", "state", "id", ], str]):
                return super().get_item_oapg(name)
            
        
            def __new__(
                cls,
                *args: typing.Union[dict, frozendict.frozendict, ],
                description: typing.Union[MetaOapg.properties.description, str, schemas.Unset] = schemas.unset,
                name: typing.Union[MetaOapg.properties.name, str, schemas.Unset] = schemas.unset,
                relatesTo: typing.Union[MetaOapg.properties.relatesTo, list, tuple, schemas.Unset] = schemas.unset,
                activityStreamableItem: typing.Union[MetaOapg.properties.activityStreamableItem, list, tuple, schemas.Unset] = schemas.unset,
                dueDate: typing.Union[MetaOapg.properties.dueDate, str, date, schemas.Unset] = schemas.unset,
                associatedReviews: typing.Union[MetaOapg.properties.associatedReviews, list, tuple, schemas.Unset] = schemas.unset,
                category: typing.Union[MetaOapg.properties.category, list, tuple, schemas.Unset] = schemas.unset,
                supports: typing.Union['Supports9df8579a128710001ac8e9879d1f0000', schemas.Unset] = schemas.unset,
                worker: typing.Union['Worker47e98fa91eee100017c2c78c80410000', schemas.Unset] = schemas.unset,
                status: typing.Union['Status9df8579a128710001ac8e9879d1f0001', schemas.Unset] = schemas.unset,
                completedOn: typing.Union[MetaOapg.properties.completedOn, str, date, schemas.Unset] = schemas.unset,
                createdBy: typing.Union['CreatedBy88d272af423b100036b561a7784b0000', schemas.Unset] = schemas.unset,
                state: typing.Union[MetaOapg.properties.state, str, schemas.Unset] = schemas.unset,
                id: typing.Union[MetaOapg.properties.id, str, schemas.Unset] = schemas.unset,
                _configuration: typing.Optional[schemas.Configuration] = None,
                **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
            ) -> 'all_of_0':
                return super().__new__(
                    cls,
                    *args,
                    description=description,
                    name=name,
                    relatesTo=relatesTo,
                    activityStreamableItem=activityStreamableItem,
                    dueDate=dueDate,
                    associatedReviews=associatedReviews,
                    category=category,
                    supports=supports,
                    worker=worker,
                    status=status,
                    completedOn=completedOn,
                    createdBy=createdBy,
                    state=state,
                    id=id,
                    _configuration=_configuration,
                    **kwargs,
                )
        
        @classmethod
        @functools.lru_cache()
        def all_of(cls):
            # we need this here to make our import statements work
            # we must store _composed_schemas in here so the code is only run
            # when we invoke this method. If we kept this at the class
            # level we would get an error because the class level
            # code would be run when this module is imported, and these composed
            # classes don't exist yet because their module has not finished
            # loading
            return [
                cls.all_of_0,
            ]


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'GoalsSummary2c793e888bcd100033e663075a2b0000':
        return super().__new__(
            cls,
            *args,
            _configuration=_configuration,
            **kwargs,
        )

from workday_performance_enablement_python_sdk.model.activity_streamable_item_summary88d272af423b100036fc19a90e210000 import ActivityStreamableItemSummary88d272af423b100036fc19a90e210000
from workday_performance_enablement_python_sdk.model.associated_reviews_summary2c793e888bcd1000346e381955dd0000 import AssociatedReviewsSummary2c793e888bcd1000346e381955dd0000
from workday_performance_enablement_python_sdk.model.category_summary88d272af423b100036e57ea69d570000 import CategorySummary88d272af423b100036e57ea69d570000
from workday_performance_enablement_python_sdk.model.created_by88d272af423b100036b561a7784b0000 import CreatedBy88d272af423b100036b561a7784b0000
from workday_performance_enablement_python_sdk.model.relates_to_summary2c793e888bcd100034b42ada01b20000 import RelatesToSummary2c793e888bcd100034b42ada01b20000
from workday_performance_enablement_python_sdk.model.status9df8579a128710001ac8e9879d1f0001 import Status9df8579a128710001ac8e9879d1f0001
from workday_performance_enablement_python_sdk.model.supports9df8579a128710001ac8e9879d1f0000 import Supports9df8579a128710001ac8e9879d1f0000
from workday_performance_enablement_python_sdk.model.worker47e98fa91eee100017c2c78c80410000 import Worker47e98fa91eee100017c2c78c80410000
