# coding: utf-8

"""
    performanceEnablement

    The Performance Management service enables applications to access and create feedback about workers in the system.

    The version of the OpenAPI document: v5
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from workday_performance_enablement_python_sdk import schemas  # noqa: F401


class FeedbackEventDetailAfd6ac52d62510001086b5c85cd50000(
    schemas.ComposedSchema,
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        
        class all_of_0(
            schemas.DictSchema
        ):
        
        
            class MetaOapg:
                
                class properties:
                
                    @staticmethod
                    def toWorker() -> typing.Type['ToWorkerF4946919a39f10000f03207b1f230000']:
                        return ToWorkerF4946919a39f10000f03207b1f230000
                    
                    
                    class workersToNotify(
                        schemas.ListSchema
                    ):
                    
                    
                        class MetaOapg:
                            
                            @staticmethod
                            def items() -> typing.Type['WorkersToNotify9e478586f65410001035b6c26a4c0000']:
                                return WorkersToNotify9e478586f65410001035b6c26a4c0000
                    
                        def __new__(
                            cls,
                            arg: typing.Union[typing.Tuple['WorkersToNotify9e478586f65410001035b6c26a4c0000'], typing.List['WorkersToNotify9e478586f65410001035b6c26a4c0000']],
                            _configuration: typing.Optional[schemas.Configuration] = None,
                        ) -> 'workersToNotify':
                            return super().__new__(
                                cls,
                                arg,
                                _configuration=_configuration,
                            )
                    
                        def __getitem__(self, i: int) -> 'WorkersToNotify9e478586f65410001035b6c26a4c0000':
                            return super().__getitem__(i)
                
                    @staticmethod
                    def relatesTo() -> typing.Type['RelatesTo9d12ad407f0f10001c3949add7d40000']:
                        return RelatesTo9d12ad407f0f10001c3949add7d40000
                
                    @staticmethod
                    def businessProcessParameters() -> typing.Type['BusinessProcessParametersAfd6ac52d6251000117d0a60ed8b0000']:
                        return BusinessProcessParametersAfd6ac52d6251000117d0a60ed8b0000
                    
                    
                    class feedbackAlsoAbout(
                        schemas.ListSchema
                    ):
                    
                    
                        class MetaOapg:
                            
                            @staticmethod
                            def items() -> typing.Type['GetWorkersFeedbackAlsoAbout3ab333661034100010b5635b2f7a0302']:
                                return GetWorkersFeedbackAlsoAbout3ab333661034100010b5635b2f7a0302
                    
                        def __new__(
                            cls,
                            arg: typing.Union[typing.Tuple['GetWorkersFeedbackAlsoAbout3ab333661034100010b5635b2f7a0302'], typing.List['GetWorkersFeedbackAlsoAbout3ab333661034100010b5635b2f7a0302']],
                            _configuration: typing.Optional[schemas.Configuration] = None,
                        ) -> 'feedbackAlsoAbout':
                            return super().__new__(
                                cls,
                                arg,
                                _configuration=_configuration,
                            )
                    
                        def __getitem__(self, i: int) -> 'GetWorkersFeedbackAlsoAbout3ab333661034100010b5635b2f7a0302':
                            return super().__getitem__(i)
                    hiddenFromWorker = schemas.BoolSchema
                    hiddenFromManager = schemas.BoolSchema
                    comment = schemas.StrSchema
                
                    @staticmethod
                    def fromWorker() -> typing.Type['FromWorkerAfd6ac52d62510001357f891ccfd0001']:
                        return FromWorkerAfd6ac52d62510001357f891ccfd0001
                
                    @staticmethod
                    def badge() -> typing.Type['BadgeAfd6ac52d62510001357f891ccfd0003']:
                        return BadgeAfd6ac52d62510001357f891ccfd0003
                    
                    
                    class relatedFeedbackEvents(
                        schemas.ListSchema
                    ):
                    
                    
                        class MetaOapg:
                            
                            @staticmethod
                            def items() -> typing.Type['RelatedFeedbackEvents9708c966f04f10000e1e9b7f9a5c0000']:
                                return RelatedFeedbackEvents9708c966f04f10000e1e9b7f9a5c0000
                    
                        def __new__(
                            cls,
                            arg: typing.Union[typing.Tuple['RelatedFeedbackEvents9708c966f04f10000e1e9b7f9a5c0000'], typing.List['RelatedFeedbackEvents9708c966f04f10000e1e9b7f9a5c0000']],
                            _configuration: typing.Optional[schemas.Configuration] = None,
                        ) -> 'relatedFeedbackEvents':
                            return super().__new__(
                                cls,
                                arg,
                                _configuration=_configuration,
                            )
                    
                        def __getitem__(self, i: int) -> 'RelatedFeedbackEvents9708c966f04f10000e1e9b7f9a5c0000':
                            return super().__getitem__(i)
                    feedbackGivenDate = schemas.DateSchema
                    showFeedbackProviderName = schemas.BoolSchema
                    href = schemas.StrSchema
                    id = schemas.StrSchema
                    descriptor = schemas.StrSchema
                    __annotations__ = {
                        "toWorker": toWorker,
                        "workersToNotify": workersToNotify,
                        "relatesTo": relatesTo,
                        "businessProcessParameters": businessProcessParameters,
                        "feedbackAlsoAbout": feedbackAlsoAbout,
                        "hiddenFromWorker": hiddenFromWorker,
                        "hiddenFromManager": hiddenFromManager,
                        "comment": comment,
                        "fromWorker": fromWorker,
                        "badge": badge,
                        "relatedFeedbackEvents": relatedFeedbackEvents,
                        "feedbackGivenDate": feedbackGivenDate,
                        "showFeedbackProviderName": showFeedbackProviderName,
                        "href": href,
                        "id": id,
                        "descriptor": descriptor,
                    }
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["toWorker"]) -> 'ToWorkerF4946919a39f10000f03207b1f230000': ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["workersToNotify"]) -> MetaOapg.properties.workersToNotify: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["relatesTo"]) -> 'RelatesTo9d12ad407f0f10001c3949add7d40000': ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["businessProcessParameters"]) -> 'BusinessProcessParametersAfd6ac52d6251000117d0a60ed8b0000': ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["feedbackAlsoAbout"]) -> MetaOapg.properties.feedbackAlsoAbout: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["hiddenFromWorker"]) -> MetaOapg.properties.hiddenFromWorker: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["hiddenFromManager"]) -> MetaOapg.properties.hiddenFromManager: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["comment"]) -> MetaOapg.properties.comment: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["fromWorker"]) -> 'FromWorkerAfd6ac52d62510001357f891ccfd0001': ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["badge"]) -> 'BadgeAfd6ac52d62510001357f891ccfd0003': ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["relatedFeedbackEvents"]) -> MetaOapg.properties.relatedFeedbackEvents: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["feedbackGivenDate"]) -> MetaOapg.properties.feedbackGivenDate: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["showFeedbackProviderName"]) -> MetaOapg.properties.showFeedbackProviderName: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["href"]) -> MetaOapg.properties.href: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
            
            @typing.overload
            def __getitem__(self, name: typing_extensions.Literal["descriptor"]) -> MetaOapg.properties.descriptor: ...
            
            @typing.overload
            def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
            
            def __getitem__(self, name: typing.Union[typing_extensions.Literal["toWorker", "workersToNotify", "relatesTo", "businessProcessParameters", "feedbackAlsoAbout", "hiddenFromWorker", "hiddenFromManager", "comment", "fromWorker", "badge", "relatedFeedbackEvents", "feedbackGivenDate", "showFeedbackProviderName", "href", "id", "descriptor", ], str]):
                # dict_instance[name] accessor
                return super().__getitem__(name)
            
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["toWorker"]) -> typing.Union['ToWorkerF4946919a39f10000f03207b1f230000', schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["workersToNotify"]) -> typing.Union[MetaOapg.properties.workersToNotify, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["relatesTo"]) -> typing.Union['RelatesTo9d12ad407f0f10001c3949add7d40000', schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["businessProcessParameters"]) -> typing.Union['BusinessProcessParametersAfd6ac52d6251000117d0a60ed8b0000', schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["feedbackAlsoAbout"]) -> typing.Union[MetaOapg.properties.feedbackAlsoAbout, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["hiddenFromWorker"]) -> typing.Union[MetaOapg.properties.hiddenFromWorker, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["hiddenFromManager"]) -> typing.Union[MetaOapg.properties.hiddenFromManager, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["comment"]) -> typing.Union[MetaOapg.properties.comment, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["fromWorker"]) -> typing.Union['FromWorkerAfd6ac52d62510001357f891ccfd0001', schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["badge"]) -> typing.Union['BadgeAfd6ac52d62510001357f891ccfd0003', schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["relatedFeedbackEvents"]) -> typing.Union[MetaOapg.properties.relatedFeedbackEvents, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["feedbackGivenDate"]) -> typing.Union[MetaOapg.properties.feedbackGivenDate, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["showFeedbackProviderName"]) -> typing.Union[MetaOapg.properties.showFeedbackProviderName, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["href"]) -> typing.Union[MetaOapg.properties.href, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: typing_extensions.Literal["descriptor"]) -> typing.Union[MetaOapg.properties.descriptor, schemas.Unset]: ...
            
            @typing.overload
            def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
            
            def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["toWorker", "workersToNotify", "relatesTo", "businessProcessParameters", "feedbackAlsoAbout", "hiddenFromWorker", "hiddenFromManager", "comment", "fromWorker", "badge", "relatedFeedbackEvents", "feedbackGivenDate", "showFeedbackProviderName", "href", "id", "descriptor", ], str]):
                return super().get_item_oapg(name)
            
        
            def __new__(
                cls,
                *args: typing.Union[dict, frozendict.frozendict, ],
                toWorker: typing.Union['ToWorkerF4946919a39f10000f03207b1f230000', schemas.Unset] = schemas.unset,
                workersToNotify: typing.Union[MetaOapg.properties.workersToNotify, list, tuple, schemas.Unset] = schemas.unset,
                relatesTo: typing.Union['RelatesTo9d12ad407f0f10001c3949add7d40000', schemas.Unset] = schemas.unset,
                businessProcessParameters: typing.Union['BusinessProcessParametersAfd6ac52d6251000117d0a60ed8b0000', schemas.Unset] = schemas.unset,
                feedbackAlsoAbout: typing.Union[MetaOapg.properties.feedbackAlsoAbout, list, tuple, schemas.Unset] = schemas.unset,
                hiddenFromWorker: typing.Union[MetaOapg.properties.hiddenFromWorker, bool, schemas.Unset] = schemas.unset,
                hiddenFromManager: typing.Union[MetaOapg.properties.hiddenFromManager, bool, schemas.Unset] = schemas.unset,
                comment: typing.Union[MetaOapg.properties.comment, str, schemas.Unset] = schemas.unset,
                fromWorker: typing.Union['FromWorkerAfd6ac52d62510001357f891ccfd0001', schemas.Unset] = schemas.unset,
                badge: typing.Union['BadgeAfd6ac52d62510001357f891ccfd0003', schemas.Unset] = schemas.unset,
                relatedFeedbackEvents: typing.Union[MetaOapg.properties.relatedFeedbackEvents, list, tuple, schemas.Unset] = schemas.unset,
                feedbackGivenDate: typing.Union[MetaOapg.properties.feedbackGivenDate, str, date, schemas.Unset] = schemas.unset,
                showFeedbackProviderName: typing.Union[MetaOapg.properties.showFeedbackProviderName, bool, schemas.Unset] = schemas.unset,
                href: typing.Union[MetaOapg.properties.href, str, schemas.Unset] = schemas.unset,
                id: typing.Union[MetaOapg.properties.id, str, schemas.Unset] = schemas.unset,
                descriptor: typing.Union[MetaOapg.properties.descriptor, str, schemas.Unset] = schemas.unset,
                _configuration: typing.Optional[schemas.Configuration] = None,
                **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
            ) -> 'all_of_0':
                return super().__new__(
                    cls,
                    *args,
                    toWorker=toWorker,
                    workersToNotify=workersToNotify,
                    relatesTo=relatesTo,
                    businessProcessParameters=businessProcessParameters,
                    feedbackAlsoAbout=feedbackAlsoAbout,
                    hiddenFromWorker=hiddenFromWorker,
                    hiddenFromManager=hiddenFromManager,
                    comment=comment,
                    fromWorker=fromWorker,
                    badge=badge,
                    relatedFeedbackEvents=relatedFeedbackEvents,
                    feedbackGivenDate=feedbackGivenDate,
                    showFeedbackProviderName=showFeedbackProviderName,
                    href=href,
                    id=id,
                    descriptor=descriptor,
                    _configuration=_configuration,
                    **kwargs,
                )
        
        @classmethod
        @functools.lru_cache()
        def all_of(cls):
            # we need this here to make our import statements work
            # we must store _composed_schemas in here so the code is only run
            # when we invoke this method. If we kept this at the class
            # level we would get an error because the class level
            # code would be run when this module is imported, and these composed
            # classes don't exist yet because their module has not finished
            # loading
            return [
                cls.all_of_0,
            ]


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'FeedbackEventDetailAfd6ac52d62510001086b5c85cd50000':
        return super().__new__(
            cls,
            *args,
            _configuration=_configuration,
            **kwargs,
        )

from workday_performance_enablement_python_sdk.model.badge_afd6ac52d62510001357f891ccfd0003 import BadgeAfd6ac52d62510001357f891ccfd0003
from workday_performance_enablement_python_sdk.model.business_process_parameters_afd6ac52d6251000117d0a60ed8b0000 import BusinessProcessParametersAfd6ac52d6251000117d0a60ed8b0000
from workday_performance_enablement_python_sdk.model.from_worker_afd6ac52d62510001357f891ccfd0001 import FromWorkerAfd6ac52d62510001357f891ccfd0001
from workday_performance_enablement_python_sdk.model.get_workers_feedback_also_about3ab333661034100010b5635b2f7a0302 import GetWorkersFeedbackAlsoAbout3ab333661034100010b5635b2f7a0302
from workday_performance_enablement_python_sdk.model.related_feedback_events9708c966f04f10000e1e9b7f9a5c0000 import RelatedFeedbackEvents9708c966f04f10000e1e9b7f9a5c0000
from workday_performance_enablement_python_sdk.model.relates_to9d12ad407f0f10001c3949add7d40000 import RelatesTo9d12ad407f0f10001c3949add7d40000
from workday_performance_enablement_python_sdk.model.to_worker_f4946919a39f10000f03207b1f230000 import ToWorkerF4946919a39f10000f03207b1f230000
from workday_performance_enablement_python_sdk.model.workers_to_notify9e478586f65410001035b6c26a4c0000 import WorkersToNotify9e478586f65410001035b6c26a4c0000
